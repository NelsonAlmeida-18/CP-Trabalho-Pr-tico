This is pdfTeX, Version 3.141592653-2.6-1.40.24 (TeX Live 2022/Homebrew) (preloaded format=pdflatex 2022.5.27)  12 JUN 2022 03:50
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**cp2122t.tex
(./cp2122t.tex
LaTeX2e <2021-11-15> patch level 1
L3 programming layer <2022-02-24>
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/base/article.
cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/base/size10.c
lo
File: size10.clo 2021/10/04 v1.4n Standard LaTeX file (size option)
)
\c@part=\count185
\c@section=\count186
\c@subsection=\count187
\c@subsubsection=\count188
\c@paragraph=\count189
\c@subparagraph=\count190
\c@figure=\count191
\c@table=\count192
\abovecaptionskip=\skip47
\belowcaptionskip=\skip48
\bibindent=\dimen138
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/geometry/geom
etry.sty
Package: geometry 2020/01/02 v5.9 Page Geometry

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/graphics/keyv
al.sty
Package: keyval 2014/10/28 v1.15 key=value parser (DPC)
\KV@toks@=\toks16
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/iftex/ifvte
x.sty
Package: ifvtex 2019/10/25 v1.7 ifvtex legacy package. Use iftex instead.

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/iftex/iftex
.sty
Package: iftex 2022/02/03 v1.0f TeX engine tests
))
\Gm@cnth=\count193
\Gm@cntv=\count194
\c@Gm@tempcnt=\count195
\Gm@bindingoffset=\dimen139
\Gm@wd@mp=\dimen140
\Gm@odd@mp=\dimen141
\Gm@even@mp=\dimen142
\Gm@layoutwidth=\dimen143
\Gm@layoutheight=\dimen144
\Gm@layouthoffset=\dimen145
\Gm@layoutvoffset=\dimen146
\Gm@dimlist=\toks17
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/psnfss/palati
no.sty
Package: palatino 2020/03/25 PSNFSS-v9.3 (SPQR) 
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/hyperref/hype
rref.sty
Package: hyperref 2022-02-21 v7.00n Hypertext links for LaTeX

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/ltxcmds/ltx
cmds.sty
Package: ltxcmds 2020-05-10 v1.25 LaTeX kernel commands for general use (HO)
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/pdftexcmds/
pdftexcmds.sty
Package: pdftexcmds 2020-06-27 v0.33 Utility functions of pdfTeX for LuaTeX (HO
)

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/infwarerr/i
nfwarerr.sty
Package: infwarerr 2019/12/03 v1.5 Providing info/warning/error messages (HO)
)
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode found.
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/kvsetkeys/k
vsetkeys.sty
Package: kvsetkeys 2019/12/15 v1.18 Key value parser (HO)
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/kvdefinekey
s/kvdefinekeys.sty
Package: kvdefinekeys 2019-12-19 v1.6 Define keys (HO)
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/pdfescape/p
dfescape.sty
Package: pdfescape 2019/12/09 v1.15 Implements pdfTeX's escape features (HO)
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/hycolor/hycol
or.sty
Package: hycolor 2020-01-27 v1.10 Color options for hyperref/bookmark (HO)
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/letltxmacro/l
etltxmacro.sty
Package: letltxmacro 2019/12/03 v1.6 Let assignment for LaTeX macros (HO)
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/auxhook/auxho
ok.sty
Package: auxhook 2019-12-17 v1.6 Hooks for auxiliary files (HO)
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/kvoptions/kvo
ptions.sty
Package: kvoptions 2020-10-07 v3.14 Key value format for package options (HO)
)
\@linkdim=\dimen147
\Hy@linkcounter=\count196
\Hy@pagecounter=\count197

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/hyperref/pd1e
nc.def
File: pd1enc.def 2022-02-21 v7.00n Hyperref: PDFDocEncoding definition (HO)
Now handling font encoding PD1 ...
... no UTF-8 mapping file for font encoding PD1
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/intcalc/int
calc.sty
Package: intcalc 2019/12/15 v1.3 Expandable calculations with integers (HO)
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/etexcmds/et
excmds.sty
Package: etexcmds 2019/12/15 v1.7 Avoid name clashes with e-TeX commands (HO)
)
\Hy@SavedSpaceFactor=\count198

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/hyperref/puen
c.def
File: puenc.def 2022-02-21 v7.00n Hyperref: PDF Unicode definition (HO)
Now handling font encoding PU ...
... no UTF-8 mapping file for font encoding PU
)
Package hyperref Info: Option `colorlinks' set `true' on input line 4018.
Package hyperref Info: Hyper figures OFF on input line 4137.
Package hyperref Info: Link nesting OFF on input line 4142.
Package hyperref Info: Hyper index ON on input line 4145.
Package hyperref Info: Plain pages OFF on input line 4152.
Package hyperref Info: Backreferencing OFF on input line 4157.
Package hyperref Info: Implicit mode ON; LaTeX internals redefined.
Package hyperref Info: Bookmarks ON on input line 4390.
\c@Hy@tempcnt=\count199

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/url/url.sty
\Urlmuskip=\muskip16
Package: url 2013/09/16  ver 3.4  Verb mode for urls, etc.
)
LaTeX Info: Redefining \url on input line 4749.
\XeTeXLinkMargin=\dimen148

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/bitset/bits
et.sty
Package: bitset 2019/12/09 v1.3 Handle bit-vector datatype (HO)

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/bigintcalc/
bigintcalc.sty
Package: bigintcalc 2019/12/15 v1.5 Expandable calculations on big integers (HO
)
))
\Fld@menulength=\count266
\Field@Width=\dimen149
\Fld@charsize=\dimen150
Package hyperref Info: Hyper figures OFF on input line 6027.
Package hyperref Info: Link nesting OFF on input line 6032.
Package hyperref Info: Hyper index ON on input line 6035.
Package hyperref Info: backreferencing OFF on input line 6042.
Package hyperref Info: Link coloring ON on input line 6045.
Package hyperref Info: Link coloring with OCG OFF on input line 6052.
Package hyperref Info: PDF/A mode OFF on input line 6057.
LaTeX Info: Redefining \ref on input line 6097.
LaTeX Info: Redefining \pageref on input line 6101.

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/base/atbegshi
-ltx.sty
Package: atbegshi-ltx 2021/01/10 v1.0c Emulation of the original atbegshi
package with kernel methods
)
\Hy@abspage=\count267
\c@Item=\count268
\c@Hfootnote=\count269
)
Package hyperref Info: Driver (autodetected): hpdftex.

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/hyperref/hpdf
tex.def
File: hpdftex.def 2022-02-21 v7.00n Hyperref driver for pdfTeX

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/base/atveryen
d-ltx.sty
Package: atveryend-ltx 2020/08/19 v1.0a Emulation of the original atveryend pac
kage
with kernel methods
)
\Fld@listcount=\count270
\c@bookmark@seq@number=\count271

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/rerunfilechec
k/rerunfilecheck.sty
Package: rerunfilecheck 2019/12/05 v1.9 Rerun checks for auxiliary files (HO)

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/uniquecount
er/uniquecounter.sty
Package: uniquecounter 2019/12/15 v1.4 Provide unlimited unique counter (HO)
)
Package uniquecounter Info: New unique counter `rerunfilecheck' on input line 2
86.
)
\Hy@SectionHShift=\skip49
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/graphics/grap
hicx.sty
Package: graphicx 2021/09/16 v1.2d Enhanced LaTeX Graphics (DPC,SPQR)

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/graphics/grap
hics.sty
Package: graphics 2021/03/04 v1.4d Standard LaTeX Graphics (DPC,SPQR)

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/graphics/trig
.sty
Package: trig 2021/08/11 v1.11 sin cos tan (DPC)
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/graphics-cfg/
graphics.cfg
File: graphics.cfg 2016/06/04 v1.11 sample graphics configuration
)
Package graphics Info: Driver file: pdftex.def on input line 107.

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/graphics-def/
pdftex.def
File: pdftex.def 2020/10/05 v1.2a Graphics/color driver for pdftex
))
\Gin@req@height=\dimen151
\Gin@req@width=\dimen152
) (./cp2122t.sty
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/base/fleqn.st
y

LaTeX Warning: inputting `fleqn.clo' instead of obsolete `fleqn.sty'.


(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/base/fleqn.cl
o
File: fleqn.clo 2016/12/29 v1.2b Standard LaTeX option (flush left equations)
\mathindent=\skip50
Applying: [2015/01/01] Make \[ robust on input line 50.
LaTeX Info: Redefining \[ on input line 51.
Already applied: [0000/00/00] Make \[ robust on input line 62.
Applying: [2015/01/01] Make \] robust on input line 74.
LaTeX Info: Redefining \] on input line 75.
Already applied: [0000/00/00] Make \] robust on input line 83.
))
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/babel/babel
.sty
Package: babel 2022/02/26 3.73 The Babel package
\babel@savecnt=\count272
\U@D=\dimen153
\l@unhyphenated=\language87

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/babel/txtba
bel.def)
\bbl@readstream=\read2
\bbl@dirlevel=\count273

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/babel-portu
ges/portuguese.ldf
Language: portuges 2021/07/09 v1.2t Portuguese support from the babel system
Package babel Info: Making " an active character on input line 143.
))
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/base/inputenc
.sty
Package: inputenc 2021/02/14 v1.3d Input encoding file
\inpenc@prehook=\toks18
\inpenc@posthook=\toks19
)
\c@teste=\count274
\c@propriedade=\count275

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/fancyvrb/fanc
yvrb.sty
Package: fancyvrb 2021/12/21 4.1b verbatim text (tvz,hv)
\FV@CodeLineNo=\count276
\FV@InFile=\read3
\FV@TabBox=\box50
\c@FancyVerbLine=\count277
\FV@StepNumber=\count278
\FV@OutFile=\write3
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xy.st
y
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xy.te
x Bootstrap'ing: catcodes, docmode,
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xyrec
at.tex)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xyidi
oms.tex)

 Xy-pic version 3.8.9 <2013/10/06>
 Copyright (c) 1991-2013 by Kristoffer H. Rose <krisrose@tug.org> and others
 Xy-pic is free software: see the User's Guide for details.

Loading kernel: messages; fonts; allocations: state,
\X@c=\dimen154
\Y@c=\dimen155
\U@c=\dimen156
\D@c=\dimen157
\L@c=\dimen158
\R@c=\dimen159
\Edge@c=\toks20
\X@p=\dimen160
\Y@p=\dimen161
\U@p=\dimen162
\D@p=\dimen163
\L@p=\dimen164
\R@p=\dimen165
\Edge@p=\toks21
\X@origin=\dimen166
\Y@origin=\dimen167
\X@xbase=\dimen168
\Y@xbase=\dimen169
\X@ybase=\dimen170
\Y@ybase=\dimen171
\X@min=\dimen172
\Y@min=\dimen173
\X@max=\dimen174
\Y@max=\dimen175
\lastobjectbox@=\box51
\zerodotbox@=\box52
\almostz@=\dimen176
 direction,
\d@X=\dimen177
\d@Y=\dimen178
\K@=\count279
\KK@=\count280
\Direction=\count281
\K@dXdY=\dimen179
\K@dYdX=\dimen180
\xyread@=\read4
\xywrite@=\write4
\csp@=\count282
\quotPTK@=\dimen181

utility macros; pictures: \xy, positions,
\swaptoks@@=\toks22
\connectobjectbox@@=\box53
 objects,
\styletoks@=\toks23
 decorations;
kernel objects: directionals, circles, text; options; algorithms: directions,
edges, connections;  Xy-pic loaded)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/iftex/ifpdf
.sty
Package: ifpdf 2019/10/25 v3.4 ifpdf legacy package. Use iftex instead.
)
Package: xy 2013/10/06 Xy-pic version 3.8.9

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xyall
.tex  Xy-pic option: All features v.3.8
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xycur
ve.tex  Xy-pic option: Curve and Spline extension v.3.12 curve,
\crv@cnt@=\count283
\crvpts@=\toks24
\splinebox@=\box54
\splineval@=\dimen182
\splinedepth@=\dimen183
\splinetol@=\dimen184
\splinelength@=\dimen185
 circles,
\L@=\dimen186

loaded)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xyfra
me.tex  Xy-pic option: Frame and Bracket extension v.3.14 loaded)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xycmt
ip.tex  Xy-pic option: Computer Modern tip extension v.3.7
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xytip
s.tex  Xy-pic option: More Tips extension v.3.11 loaded) loaded)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xylin
e.tex  Xy-pic option: Line styles extension v.3.10
\xylinethick@=\dimen187
 loaded)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xyrot
ate.tex  Xy-pic option: Rotate and Scale extension v.3.8 loaded)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xycol
or.tex  Xy-pic option: Colour extension v.3.11 loaded)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xymat
rix.tex  Xy-pic option: Matrix feature v.3.14
\Row=\count284
\Col=\count285
\queue@=\toks25
\queue@@=\toks26
\qcount@=\count286
\qcount@@=\count287
\matrixsize@=\count288
 loaded)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xyarr
ow.tex  Xy-pic option: Arrow and Path feature v.3.9 path, \ar, loaded)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xygra
ph.tex  Xy-pic option: Graph feature v.3.11 loaded) loaded)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xypdf
.tex  Xy-pic option: PDF driver v.1.7
Xy-pic pdf driver: `color' extension support
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xypdf
-co.tex loaded) Xy-pic pdf driver: `curve' extension support
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xypdf
-cu.tex loaded) Xy-pic pdf driver: `frame' extension support
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xypdf
-fr.tex loaded) Xy-pic pdf driver: `line' extension support
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xypdf
-li.tex loaded) Xy-pic pdf driver: `rotate' extension support
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xypic/xypdf
-ro.tex loaded) loaded))
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/base/makeidx.
sty
Package: makeidx 2021/10/04 v1.0m Standard LaTeX package
)
\pn=\count289
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/caption/subca
ption.sty
Package: subcaption 2022/01/07 v1.5 Sub-captions (AR)

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/caption/capti
on.sty
Package: caption 2022/03/01 v3.6b Customizing captions (AR)

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/caption/capti
on3.sty
Package: caption3 2022/03/17 v2.3b caption3 kernel (AR)
\caption@tempdima=\dimen188
\captionmargin=\dimen189
\caption@leftmargin=\dimen190
\caption@rightmargin=\dimen191
\caption@width=\dimen192
\caption@indent=\dimen193
\caption@parindent=\dimen194
\caption@hangindent=\dimen195
Package caption Info: Standard document class detected.
)
\c@caption@flags=\count290
\c@continuedfloat=\count291
Package caption Info: hyperref package is loaded.
)
\c@subfigure=\count292
\c@subtable=\count293
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/adjustbox/adj
ustbox.sty
Package: adjustbox 2020/08/19 v1.3 Adjusting TeX boxes (trim, clip, ...)

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/xkeyval/xkeyv
al.sty
Package: xkeyval 2020/11/20 v2.8 package option processing (HA)

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xkeyval/xke
yval.tex
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/xkeyval/xkv
utils.tex
\XKV@toks=\toks27
\XKV@tempa@toks=\toks28
)
\XKV@depth=\count294
File: xkeyval.tex 2014/12/03 v2.7a key=value parser (HA)
))
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/adjustbox/adj
calc.sty
Package: adjcalc 2012/05/16 v1.1 Provides advanced setlength with multiple back
-ends (calc, etex, pgfmath)
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/adjustbox/tri
mclip.sty
Package: trimclip 2020/08/19 v1.2 Trim and clip general TeX material

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/collectbox/co
llectbox.sty
Package: collectbox 2012/05/17 v0.4b Collect macro arguments as boxes
\collectedbox=\box55
)
\tc@llx=\dimen196
\tc@lly=\dimen197
\tc@urx=\dimen198
\tc@ury=\dimen199
Package trimclip Info: Using driver 'tc-pdftex.def'.

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/adjustbox/tc-
pdftex.def
File: tc-pdftex.def 2019/01/04 v2.2 Clipping driver for pdftex
))
\adjbox@Width=\dimen256
\adjbox@Height=\dimen257
\adjbox@Depth=\dimen258
\adjbox@Totalheight=\dimen259
\adjbox@pwidth=\dimen260
\adjbox@pheight=\dimen261
\adjbox@pdepth=\dimen262
\adjbox@ptotalheight=\dimen263

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/ifoddpage/ifo
ddpage.sty
Package: ifoddpage 2016/04/23 v1.1 Conditionals for odd/even page detection
\c@checkoddpage=\count295
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/varwidth/varw
idth.sty
Package: varwidth 2009/03/30 ver 0.92;  Variable-width minipages
\@vwid@box=\box56
\sift@deathcycles=\count296
\@vwid@loff=\dimen264
\@vwid@roff=\dimen265
))
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/graphics/colo
r.sty
Package: color 2021/12/07 v1.3c Standard LaTeX Color (DPC)

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/graphics-cfg/
color.cfg
File: color.cfg 2016/01/02 v1.6 sample color configuration
)
Package color Info: Driver file: pdftex.def on input line 149.
)
Package color Info: Redefining color red on input line 11.
Package color Info: Redefining color blue on input line 12.

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/amsmath/amste
xt.sty
Package: amstext 2021/08/26 v2.01 AMS text

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/amsmath/amsge
n.sty
File: amsgen.sty 1999/11/30 v2.0 generic functions
\@emptytoks=\toks29
\ex@=\dimen266
))
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/amsfonts/amss
ymb.sty
Package: amssymb 2013/01/14 v3.01 AMS font symbols

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/amsfonts/amsf
onts.sty
Package: amsfonts 2013/01/14 v3.01 Basic AMSFonts support
\symAMSa=\mathgroup4
\symAMSb=\mathgroup5
LaTeX Font Info:    Redeclaring math symbol \hbar on input line 98.
LaTeX Font Info:    Overwriting math alphabet `\mathfrak' in version `bold'
(Font)                  U/euf/m/n --> U/euf/b/n on input line 106.
))
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/stmaryrd/stma
ryrd.sty
Package: stmaryrd 1994/03/03 St Mary's Road symbol package
\symstmry=\mathgroup6
LaTeX Font Info:    Overwriting symbol font `stmry' in version `bold'
(Font)                  U/stmry/m/n --> U/stmry/b/n on input line 89.
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/polytable/pol
ytable.sty
Package: polytable 2020/07/14 v0.8.6 `polytable' package (Andres Loeh)

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/lazylist/lazy
list.sty)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/tools/array.s
ty
Package: array 2021/10/04 v2.5f Tabular extension package (FMi)
\col@sep=\dimen267
\ar@mcellbox=\box57
\extrarowheight=\dimen268
\NC@list=\toks30
\extratabsurround=\skip51
\backup@length=\skip52
\ar@cellbox=\box58
)
\PT@colwidth=\dimen269
\PT@cols=\count297
\PT@table=\count298
\PT@toks=\toks31
\PT@in=\read5
\PT@out=\write5
)
\blanklineskip=\skip53

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/tools/calc.st
y
Package: calc 2017/05/25 v4.3 Infix arithmetic (KKT,FJ)
\calc@Acount=\count299
\calc@Bcount=\count300
\calc@Adimen=\dimen270
\calc@Bdimen=\dimen271
\calc@Askip=\skip54
\calc@Bskip=\skip55
LaTeX Info: Redefining \setlength on input line 80.
LaTeX Info: Redefining \addtolength on input line 81.
\calc@Ccount=\count301
\calc@Cskip=\skip56
)

LaTeX Warning: Label `eq:fokkinga' multiply defined.

\@indexfile=\write6
\openout6 = `cp2122t.idx'.

Writing index file cp2122t.idx
LaTeX Font Info:    Trying to load font information for OT1+ppl on input line 3
06.

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/psnfss/ot1ppl
.fd
File: ot1ppl.fd 2001/06/04 font definitions for OT1/ppl.
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/l3backend/l3b
ackend-pdftex.def
File: l3backend-pdftex.def 2022-02-07 L3 backend support: PDF output (pdfTeX)
\l__color_backend_stack_int=\count302
\l__pdf_internal_box=\box59
) (./cp2122t.aux)
\openout1 = `cp2122t.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 306.
LaTeX Font Info:    ... okay on input line 306.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 306.
LaTeX Font Info:    ... okay on input line 306.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 306.
LaTeX Font Info:    ... okay on input line 306.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 306.
LaTeX Font Info:    ... okay on input line 306.
LaTeX Font Info:    Checking defaults for TS1/cmr/m/n on input line 306.
LaTeX Font Info:    ... okay on input line 306.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 306.
LaTeX Font Info:    ... okay on input line 306.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 306.
LaTeX Font Info:    ... okay on input line 306.
LaTeX Font Info:    Checking defaults for PD1/pdf/m/n on input line 306.
LaTeX Font Info:    ... okay on input line 306.
LaTeX Font Info:    Checking defaults for PU/pdf/m/n on input line 306.
LaTeX Font Info:    ... okay on input line 306.

*geometry* driver: auto-detecting
*geometry* detected driver: pdftex
*geometry* verbose mode - [ preamble ] result:
* driver: pdftex
* paper: a4paper
* layout: <same size as paper>
* layoutoffset:(h,v)=(0.0pt,0.0pt)
* modes: 
* h-part:(L,W,R)=(85.35826pt, 455.24411pt, 56.9055pt)
* v-part:(T,H,B)=(71.13188pt, 702.78308pt, 71.13188pt)
* \paperwidth=597.50787pt
* \paperheight=845.04684pt
* \textwidth=455.24411pt
* \textheight=702.78308pt
* \oddsidemargin=13.08827pt
* \evensidemargin=13.08827pt
* \topmargin=-38.1381pt
* \headheight=12.0pt
* \headsep=25.0pt
* \topskip=10.0pt
* \footskip=30.0pt
* \marginparwidth=57.0pt
* \marginparsep=11.0pt
* \columnsep=10.0pt
* \skip\footins=9.0pt plus 4.0pt minus 2.0pt
* \hoffset=0.0pt
* \voffset=0.0pt
* \mag=1000
* \@twocolumnfalse
* \@twosidefalse
* \@mparswitchfalse
* \@reversemarginfalse
* (1in=72.27pt=25.4mm, 1cm=28.453pt)

Package hyperref Info: Link coloring ON on input line 306.

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/hyperref/name
ref.sty
Package: nameref 2021-04-02 v2.47 Cross-referencing by name of section

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/refcount/refc
ount.sty
Package: refcount 2019/12/15 v3.6 Data extraction from label references (HO)
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/generic/gettitlestr
ing/gettitlestring.sty
Package: gettitlestring 2019/12/15 v1.6 Cleanup title references (HO)
)
\c@section@level=\count303
)
LaTeX Info: Redefining \ref on input line 306.
LaTeX Info: Redefining \pageref on input line 306.
LaTeX Info: Redefining \nameref on input line 306.
 (./cp2122t.out) (./cp2122t.out)
\@outlinefile=\write7
\openout7 = `cp2122t.out'.


(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/context/base/mkii/s
upp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count304
\scratchdimen=\dimen272
\scratchbox=\box60
\nofMPsegments=\count305
\nofMParguments=\count306
\everyMPshowfont=\toks32
\MPscratchCnt=\count307
\MPscratchDim=\dimen273
\MPnumerator=\count308
\makeMPintoPDFobject=\count309
\everyMPtoPDFconversion=\toks33
)
(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/epstopdf-pkg/
epstopdf-base.sty
Package: epstopdf-base 2020-01-24 v2.11 Base part for package epstopdf
Package epstopdf-base Info: Redefining graphics rule for `.eps' on input line 4
85.

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/latexconfig/e
pstopdf-sys.cfg
File: epstopdf-sys.cfg 2010/07/13 v1.3 Configuration of (r)epstopdf for TeX Liv
e
))
LaTeX Font Info:    Trying to load font information for U+msa on input line 306
.

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/amsfonts/umsa
.fd
File: umsa.fd 2013/01/14 v3.01 AMS symbols A
)
LaTeX Font Info:    Trying to load font information for U+msb on input line 306
.

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/amsfonts/umsb
.fd
File: umsb.fd 2013/01/14 v3.01 AMS symbols B
)
LaTeX Font Info:    Trying to load font information for U+stmry on input line 3
06.

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/stmaryrd/Ustm
ry.fd)
Package xypdf Info: Line width: 0.39998pt on input line 306.
Package caption Info: Begin \AtBeginDocument code.
Package caption Info: End \AtBeginDocument code.
LaTeX Font Info:    Trying to load font information for TS1+ppl on input line 3
09.

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/psnfss/ts1ppl
.fd
File: ts1ppl.fd 2001/06/04 font definitions for TS1/ppl.
)
\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

 [1

{/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/fonts/map/pdftex/updmap
/pdftex.map}]
\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

<cp2122t_media/castor11.png, id=64, 1458.44875pt x 1092.08pt>
File: cp2122t_media/castor11.png Graphic file (type png)
<use cp2122t_media/castor11.png>
Package pdftex.def Info: cp2122t_media/castor11.png  used on input line 490.
(pdftex.def)             Requested size: 273.14923pt x 204.5312pt.
 [2]
<cp2122t_media/sierpinski1.png, id=82, 1078.0275pt x 1078.0275pt>
File: cp2122t_media/sierpinski1.png Graphic file (type png)
<use cp2122t_media/sierpinski1.png>
Package pdftex.def Info: cp2122t_media/sierpinski1.png  used on input line 510.

(pdftex.def)             Requested size: 182.09486pt x 182.09435pt.
<cp2122t_media/sierpinski2.png, id=83, 1446.40375pt x 1337.99875pt>
File: cp2122t_media/sierpinski2.png Graphic file (type png)
<use cp2122t_media/sierpinski2.png>
Package pdftex.def Info: cp2122t_media/sierpinski2.png  used on input line 518.

(pdftex.def)             Requested size: 273.14923pt x 252.67078pt.
\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

 [3 <./cp2122t_media/castor11.png> <./cp2122t_media/sierpinski1.png>]
\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

LaTeX Font Info:    Trying to load font information for OT1+pcr on input line 6
10.

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/psnfss/ot1pcr
.fd
File: ot1pcr.fd 2001/06/04 font definitions for OT1/pcr.
) [4 <./cp2122t_media/sierpinski2.png>]
\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

 [5]
\openout5 = `cp2122t.ptb'.

 [6] <xymatrix 2x2 191> [7]

Package hyperref Warning: Token not allowed in a PDF string (Unicode):
(hyperref)                removing `subscript' on input line 887.

LaTeX Font Info:    Trying to load font information for OT1+phv on input line 8
99.

(/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/tex/latex/psnfss/ot1phv
.fd
File: ot1phv.fd 2020/03/25 scalable font definitions for OT1/phv.
)
\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

 [8]
\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

 [9]
\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

 [10]
! Missing $ inserted.
<inserted text> 
                $
l.1194 
       
? S
OK, entering \scrollmode...
! Missing \right. inserted.
<inserted text> 
                \right .
l.1194 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.1194 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.1194 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.1194 
       
I'm guessing that you meant to end an alignment here.

! Missing { inserted.
<inserted text> 
                {
l.1194 
       
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing $ inserted.
<inserted text> 
                $
l.1194 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Underfull \hbox (badness 10000) in alignment at lines 1187--1194
 [][][][]
 []

! Missing $$ inserted.
<to be read again> 
                   \tex_par:D 
l.1194 
       
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Missing $ inserted.
<inserted text> 
                $
l.1195 \right
             .
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra \right.
l.1195 \right.
              
I'm ignoring a \right that had no matching \left.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1197 ...d) (c d))) = cata (split h (split k l))}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1201 ...v{Definimos o funtor e o in da função}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1204 ...{=}\alt{\underline{\mathrm{0}}}{\succ }}
                                                  \\
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1204 ...{=}\alt{\underline{\mathrm{0}}}{\succ }}
                                                  \\
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1205 \ensuremath
                  {\Conid{F}\;\conj{\Varid{q}\;\Varid{d}}{\conj{\Varid{r}\;\...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1205 \ensuremath
                  {\Conid{F}\;\conj{\Varid{q}\;\Varid{d}}{\conj{\Varid{r}\;\...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1205 \ensuremath
                  {\Conid{F}\;\conj{\Varid{q}\;\Varid{d}}{\conj{\Varid{r}\;\...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1205 \ensuremath
                  {\Conid{F}\;\conj{\Varid{q}\;\Varid{d}}{\conj{\Varid{r}\;\...
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1205 \ensuremath
                  {\Conid{F}\;\conj{\Varid{q}\;\Varid{d}}{\conj{\Varid{r}\;\...
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1208 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1208 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1208 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1208 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1208 \just\equiv{45}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1208 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1208 \just\equiv{45}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1208 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1208 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1208 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1208 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1208 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1208 \just\equiv{45}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1208 \just\equiv{45}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1208 \just\equiv{45}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1208 \just\equiv{45}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1208 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1208 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1213 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1213 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1213 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1213 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1213 \just\equiv{9}
                     
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1213 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1213 \just\equiv{9}
                     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1213 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1213 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1213 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1213 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1213 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1213 \just\equiv{9}
                     
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1213 \just\equiv{9}
                     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1213 \just\equiv{9}
                     
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1213 \just\equiv{9}
                     
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1213 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1213 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1218 \just\equiv{20 , def in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1218 \just\equiv{20 , def in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1218 \just\equiv{20 , def in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1218 \just\equiv{20 , def in}
                               
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1218 \just\equiv{20 , def in}
                               
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1218 \just\equiv{20 , def in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1218 \just\equiv{20 , def in}
                               
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1218 \just\equiv{20 , def in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1218 \just\equiv{20 , def in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1218 \just\equiv{20 , def in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1218 \just\equiv{20 , def in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1218 \just\equiv{20 , def in}
                               
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1218 \just\equiv{20 , def in}
                               
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1218 \just\equiv{20 , def in}
                               
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1218 \just\equiv{20 , def in}
                               
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1218 \just\equiv{20 , def in}
                               
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1218 \just\equiv{20 , def in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1218 \just\equiv{20 , def in}
                               
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1221 ...d{r}\;\Varid{d}}{\Varid{c}\;\Varid{d}}}}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1221 ...d{r}\;\Varid{d}}{\Varid{c}\;\Varid{d}}}}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1221 ...d{r}\;\Varid{d}}{\Varid{c}\;\Varid{d}}}}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1221 ...d{r}\;\Varid{d}}{\Varid{c}\;\Varid{d}}}}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.1221 ...d{r}\;\Varid{d}}{\Varid{c}\;\Varid{d}}}}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.1221 ...d{r}\;\Varid{d}}{\Varid{c}\;\Varid{d}}}}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1224 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1224 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1224 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1224 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1224 \just\equiv{9}
                     
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1224 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1224 \just\equiv{9}
                     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1224 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1224 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1224 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1224 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1224 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1224 \just\equiv{9}
                     
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1224 \just\equiv{9}
                     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1224 \just\equiv{9}
                     
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1224 \just\equiv{9}
                     
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1224 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1224 \just\equiv{9}
                     
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1226 ...rid{c}\;\Varid{d}\;\succ }}}\mathrel{=}}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1226 ...rid{c}\;\Varid{d}\;\succ }}}\mathrel{=}}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1226 ...rid{c}\;\Varid{d}\;\succ }}}\mathrel{=}}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1226 ...rid{c}\;\Varid{d}\;\succ }}}\mathrel{=}}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.1226 ...rid{c}\;\Varid{d}\;\succ }}}\mathrel{=}}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.1226 ...rid{c}\;\Varid{d}\;\succ }}}\mathrel{=}}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (13.2916pt too wide) in paragraph at lines 1226--1228
[]$[][]\OT1/cmr/m/it/10 q d []\OML/cmm/m/it/10 ; \OT1/cmr/m/it/10 q d [] []$ $[
]h [] [] [] []q d\OML/cmm/m/it/10 ; []\OT1/cmr/m/it/10 r d\OML/cmm/m/it/10 ; \O
T1/cmr/m/it/10 c d[][] []k [] [] [] []q d\OML/cmm/m/it/10 ; []\OT1/cmr/m/it/10 
r d\OML/cmm/m/it/10 ; \OT1/cmr/m/it/10 c d[][] \OT1/cmr/m/n/10 (\OT1/cmr/m/it/1
0 l []
 []

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1230 ...rid{l}\mathrel{=}\alt{l_1 }{l_2 }} , 22}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1233 ...rid{c}\;\Varid{d}\;\succ }}}\mathrel{=}}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1233 ...rid{c}\;\Varid{d}\;\succ }}}\mathrel{=}}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1233 ...rid{c}\;\Varid{d}\;\succ }}}\mathrel{=}}
                                                  
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1233 ...rid{c}\;\Varid{d}\;\succ }}}\mathrel{=}}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.1233 ...rid{c}\;\Varid{d}\;\succ }}}\mathrel{=}}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.1233 ...rid{c}\;\Varid{d}\;\succ }}}\mathrel{=}}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1238 \just\equiv{16}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1238 \just\equiv{16}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1238 \just\equiv{16}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1238 \just\equiv{16}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1238 \just\equiv{16}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1238 \just\equiv{16}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1238 \just\equiv{16}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1238 \just\equiv{16}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1238 \just\equiv{16}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1238 \just\equiv{16}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1238 \just\equiv{16}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1238 \just\equiv{16}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1238 \just\equiv{16}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1238 \just\equiv{16}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1238 \just\equiv{16}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1238 \just\equiv{16}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1238 \just\equiv{16}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1238 \just\equiv{16}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1241 \left
            \{
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1243 ...r}\;\Varid{d}}{\Varid{c}\;\Varid{d}}}})}
                                                  \\
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1244   \ensuremath
                    {\conj{\alt{\Varid{r}\;\Varid{d}\;\underline{\mathrm{0}}...
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1244 ...}\;\Varid{d}}{\Varid{c}\;\Varid{d}}}}})}
                                                  \\
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1244 ...}\;\Varid{d}}{\Varid{c}\;\Varid{d}}}}})}
                                                  \\
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1245 \end
           {array}
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing } inserted.
<inserted text> 
                }
l.1245 \end
           {array}
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing $ inserted.
<inserted text> 
                $
l.1246 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing \right. inserted.
<inserted text> 
                \right .
l.1246 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (2.33618pt too wide) in paragraph at lines 1241--1246
[]$[]$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.1247 \right
             .
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra \right.
l.1247 \right.
              
I'm ignoring a \right that had no matching \left.

! Missing $ inserted.
<inserted text> 
                $
l.1248 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1250 \just\equiv{1,16}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1250 \just\equiv{1,16}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1250 \just\equiv{1,16}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1250 \just\equiv{1,16}
                        
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1250 \just\equiv{1,16}
                        
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1250 \just\equiv{1,16}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1250 \just\equiv{1,16}
                        
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1250 \just\equiv{1,16}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1250 \just\equiv{1,16}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1250 \just\equiv{1,16}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1250 \just\equiv{1,16}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1250 \just\equiv{1,16}
                        
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1250 \just\equiv{1,16}
                        
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1250 \just\equiv{1,16}
                        
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1250 \just\equiv{1,16}
                        
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1250 \just\equiv{1,16}
                        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1250 \just\equiv{1,16}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1250 \just\equiv{1,16}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1253 \left
            \{
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1255 ...{r}\;\Varid{d}}{\Varid{c}\;\Varid{d}}}}}
                                                  \\
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1256   \ensuremath
                    {\alt{\Varid{r}\;\Varid{d}\;\underline{\mathrm{0}}}{\Var...
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1256 ...{r}\;\Varid{d}}{\Varid{c}\;\Varid{d}}}}}
                                                  \\
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1257   \ensuremath
                    {\alt{\Varid{c}\;\Varid{d}\;\underline{\mathrm{0}}}{\Var...
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1257 ...{r}\;\Varid{d}}{\Varid{c}\;\Varid{d}}}}}
                                                  \\
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1258 \end
           {array}
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing $ inserted.
<inserted text> 
                $
l.1259 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing \right. inserted.
<inserted text> 
                \right .
l.1259 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
l.1260 \right
             .
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra \right.
l.1260 \right.
              
I'm ignoring a \right that had no matching \left.

! Missing $ inserted.
<inserted text> 
                $
l.1261 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1263 \just\equiv{27}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1263 \just\equiv{27}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1263 \just\equiv{27}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1263 \just\equiv{27}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1263 \just\equiv{27}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1263 \just\equiv{27}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1263 \just\equiv{27}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1263 \just\equiv{27}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1263 \just\equiv{27}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1263 \just\equiv{27}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1263 \just\equiv{27}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1263 \just\equiv{27}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1263 \just\equiv{27}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1263 \just\equiv{27}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1263 \just\equiv{27}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1263 \just\equiv{27}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1263 \just\equiv{27}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1263 \just\equiv{27}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1266 \left
            \{
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1269 ...d{r}\;\Varid{d}}{\Varid{c}\;\Varid{d}}}}
                                                  \\
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1270   \ensuremath
                    {\Varid{r}\;\Varid{d}\;\underline{\mathrm{0}}\mathrel{=}...
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1271 ...{r}\;\Varid{d}}{\Varid{c}\;\Varid{d}}})}
                                                  \\
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1272   \ensuremath
                    {\Varid{c}\;\Varid{d}\;\underline{\mathrm{0}}\mathrel{=}...
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.1273 ...d{r}\;\Varid{d}}{\Varid{c}\;\Varid{d}}}}
                                                  \\
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing } inserted.
<inserted text> 
                }
l.1274 \end
           {array}
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing $ inserted.
<inserted text> 
                $
l.1275 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing \right. inserted.
<inserted text> 
                \right .
l.1275 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
l.1276 \right
             .
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra \right.
l.1276 \right.
              
I'm ignoring a \right that had no matching \left.

! Missing $ inserted.
<inserted text> 
                $
l.1277 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1279 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1279 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1279 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1279 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1279 \just\equiv{71}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1279 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1279 \just\equiv{71}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1279 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1279 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1279 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1279 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1279 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1279 \just\equiv{71}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1279 \just\equiv{71}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1279 \just\equiv{71}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1279 \just\equiv{71}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1279 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1279 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

[11]
! Missing $ inserted.
<inserted text> 
                $
l.1282 \left
            \{
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1291 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing \right. inserted.
<inserted text> 
                \right .
l.1291 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
l.1292 \right
             .
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra \right.
l.1292 \right.
              
I'm ignoring a \right that had no matching \left.

! Missing $ inserted.
<inserted text> 
                $
l.1293 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1295 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1295 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1295 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1295 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1295 \just\equiv{71}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1295 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1295 \just\equiv{71}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1295 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1295 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1295 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1295 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1295 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1295 \just\equiv{71}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1295 \just\equiv{71}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1295 \just\equiv{71}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1295 \just\equiv{71}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1295 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1295 \just\equiv{71}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1298 \left
            \{
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1307 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing \right. inserted.
<inserted text> 
                \right .
l.1307 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
l.1308 \right
             .
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra \right.
l.1308 \right.
              
I'm ignoring a \right that had no matching \left.

! Missing $ inserted.
<inserted text> 
                $
l.1309 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1311 \just\equiv{def aux}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1311 \just\equiv{def aux}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1311 \just\equiv{def aux}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1311 \just\equiv{def aux}
                           
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1311 \just\equiv{def aux}
                           
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1311 \just\equiv{def aux}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1311 \just\equiv{def aux}
                           
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1311 \just\equiv{def aux}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1311 \just\equiv{def aux}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1311 \just\equiv{def aux}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1311 \just\equiv{def aux}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1311 \just\equiv{def aux}
                           
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1311 \just\equiv{def aux}
                           
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1311 \just\equiv{def aux}
                           
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1311 \just\equiv{def aux}
                           
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1311 \just\equiv{def aux}
                           
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1311 \just\equiv{def aux}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1311 \just\equiv{def aux}
                           
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1316 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1322 ...ituição h1, k1, l1 da dedução acima}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1328 ...or loop conforme visto na aula teórica}
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1334 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1334 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1334 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1334 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1334 \just\equiv{}
                    
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1334 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1334 \just\equiv{}
                    
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1334 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1334 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1334 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1334 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1334 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1334 \just\equiv{}
                    
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1334 \just\equiv{}
                    
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1334 \just\equiv{}
                    
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1334 \just\equiv{}
                    
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1334 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1334 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1340 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1340 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1340 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1340 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1340 \just\equiv{}
                    
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1340 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1340 \just\equiv{}
                    
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1340 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1340 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1340 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1340 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1340 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1340 \just\equiv{}
                    
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1340 \just\equiv{}
                    
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1340 \just\equiv{}
                    
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1340 \just\equiv{}
                    
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1340 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1340 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1346 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1346 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1346 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1346 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1346 \just\equiv{}
                    
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1346 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1346 \just\equiv{}
                    
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1346 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1346 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1346 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1346 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1346 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1346 \just\equiv{}
                    
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1346 \just\equiv{}
                    
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1346 \just\equiv{}
                    
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1346 \just\equiv{}
                    
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1346 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1346 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1352 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1352 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1352 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1352 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten \endgroup.
\endeqnarray ->\@@eqncr \egroup 
                                \global \advance \c@equation \m@ne $$\@ignor...
l.1352 \end{eqnarray*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.1352 \end{eqnarray*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.1352 \end{eqnarray*}
                      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

<xymatrix 2x2 188>
! Missing $ inserted.
<inserted text> 
                $
l.1380 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1380 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.1380 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.1380 
       
I'm guessing that you meant to end an alignment here.

! Missing { inserted.
<inserted text> 
                {
l.1380 
       
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing $ inserted.
<inserted text> 
                $
l.1380 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Underfull \hbox (badness 10000) in alignment at lines 1378--1380
 [][][][]
 []

! Missing $$ inserted.
<to be read again> 
                   \tex_par:D 
l.1380 
       
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1382 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1382 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1382 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1382 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1382 \just\equiv{}
                    
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1382 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1382 \just\equiv{}
                    
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1382 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1382 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1382 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1382 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1382 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1382 \just\equiv{}
                    
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1382 \just\equiv{}
                    
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1382 \just\equiv{}
                    
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1382 \just\equiv{}
                    
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1382 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1382 \just\equiv{}
                    
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1388 \just\equiv{def in, 50}
                              
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1388 \just\equiv{def in, 50}
                              
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1388 \just\equiv{def in, 50}
                              
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1388 \just\equiv{def in, 50}
                              
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1388 \just\equiv{def in, 50}
                              
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1388 \just\equiv{def in, 50}
                              
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1388 \just\equiv{def in, 50}
                              
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1388 \just\equiv{def in, 50}
                              
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1388 \just\equiv{def in, 50}
                              
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1388 \just\equiv{def in, 50}
                              
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1388 \just\equiv{def in, 50}
                              
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1388 \just\equiv{def in, 50}
                              
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1388 \just\equiv{def in, 50}
                              
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1388 \just\equiv{def in, 50}
                              
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1388 \just\equiv{def in, 50}
                              
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1388 \just\equiv{def in, 50}
                              
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1388 \just\equiv{def in, 50}
                              
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1388 \just\equiv{def in, 50}
                              
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1394 \just\equiv{22,1}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1394 \just\equiv{22,1}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1394 \just\equiv{22,1}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1394 \just\equiv{22,1}
                        
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1394 \just\equiv{22,1}
                        
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1394 \just\equiv{22,1}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1394 \just\equiv{22,1}
                        
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1394 \just\equiv{22,1}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1394 \just\equiv{22,1}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1394 \just\equiv{22,1}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1394 \just\equiv{22,1}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1394 \just\equiv{22,1}
                        
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1394 \just\equiv{22,1}
                        
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1394 \just\equiv{22,1}
                        
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1394 \just\equiv{22,1}
                        
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1394 \just\equiv{22,1}
                        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1394 \just\equiv{22,1}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1394 \just\equiv{22,1}
                        
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

[12]
! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1400 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1400 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1400 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1400 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1400 \just\equiv{45}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1400 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1400 \just\equiv{45}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\just #1#2->\\ &#1&
                    \rule {2em}{0pt} \{ \mbox {\rule [-.7em]{0pt}{1.8em} \sm...
l.1400 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1400 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1400 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1400 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1400 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1400 \just\equiv{45}
                      
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1400 \just\equiv{45}
                      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1400 \just\equiv{45}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1400 \just\equiv{45}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
<recently read> &
                 
l.1400 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\just ...}{1.8em} \small #2 \/} \} \nonumber \\ &&
                                                   
l.1400 \just\equiv{45}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1409 \left
            \{
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1415 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

Runaway argument?
! Paragraph ended before \just was complete.
<to be read again> 
                   \par 
l.1419 
       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1425 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1425 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1425 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1425 \end{eqnarray*}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten \endgroup.
\endeqnarray ->\@@eqncr \egroup 
                                \global \advance \c@equation \m@ne $$\@ignor...
l.1425 \end{eqnarray*}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.1425 \end{eqnarray*}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.1425 \end{eqnarray*}
                      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

\openout5 = `cp2122t.ptb'.

[13] (./cp2122t.ind [14] [15


]) (./cp2122t.bbl) [16

] (./cp2122t.aux)
Package rerunfilecheck Info: File `cp2122t.out' has not changed.
(rerunfilecheck)             Checksum: 7ECA9E1EF440DD2F0858BE0D2D0FD343;1719.
 ) 
Here is how much of TeX's memory you used:
 17274 strings out of 478268
 275542 string characters out of 5836364
 631819 words of memory out of 5000000
 35060 multiletter control sequences out of 15000+600000
 513256 words of font info for 157 fonts, out of 8000000 for 9000
 1141 hyphenation exceptions out of 8191
 67i,21n,77p,3294b,510s stack positions out of 10000i,1000n,20000p,200000b,200000s

pdfTeX warning (dest): name{section.3.17} has been referenced but does not exis
t, replaced by a fixed one

{/opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/fonts/enc/dvips/base/8r
.enc}</opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/fonts/type1/public
/amsfonts/cm/cmbx10.pfb></opt/homebrew/Cellar/texlive/20220321/share/texmf-dist
/fonts/type1/public/amsfonts/cm/cmex10.pfb></opt/homebrew/Cellar/texlive/202203
21/share/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi10.pfb></opt/homebrew/Ce
llar/texlive/20220321/share/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi7.pfb
></opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/fonts/type1/public/ams
fonts/cm/cmmi9.pfb></opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/font
s/type1/public/amsfonts/cm/cmr10.pfb></opt/homebrew/Cellar/texlive/20220321/sha
re/texmf-dist/fonts/type1/public/amsfonts/cm/cmr5.pfb></opt/homebrew/Cellar/tex
live/20220321/share/texmf-dist/fonts/type1/public/amsfonts/cm/cmr6.pfb></opt/ho
mebrew/Cellar/texlive/20220321/share/texmf-dist/fonts/type1/public/amsfonts/cm/
cmr7.pfb></opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/fonts/type1/pu
blic/amsfonts/cm/cmr9.pfb></opt/homebrew/Cellar/texlive/20220321/share/texmf-di
st/fonts/type1/public/amsfonts/cm/cmss10.pfb></opt/homebrew/Cellar/texlive/2022
0321/share/texmf-dist/fonts/type1/public/amsfonts/cm/cmss8.pfb></opt/homebrew/C
ellar/texlive/20220321/share/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy10.p
fb></opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/fonts/type1/public/a
msfonts/cm/cmsy7.pfb></opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/fo
nts/type1/public/amsfonts/cm/cmti10.pfb></opt/homebrew/Cellar/texlive/20220321/
share/texmf-dist/fonts/type1/public/amsfonts/cm/cmti7.pfb></opt/homebrew/Cellar
/texlive/20220321/share/texmf-dist/fonts/type1/public/amsfonts/cm/cmti9.pfb></o
pt/homebrew/Cellar/texlive/20220321/share/texmf-dist/fonts/type1/public/amsfont
s/latxfont/line10.pfb></opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/f
onts/type1/public/amsfonts/symbols/msam10.pfb></opt/homebrew/Cellar/texlive/202
20321/share/texmf-dist/fonts/type1/public/amsfonts/symbols/msbm10.pfb></opt/hom
ebrew/Cellar/texlive/20220321/share/texmf-dist/fonts/type1/urw/courier/ucrr8a.p
fb></opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/fonts/type1/urw/helv
etic/uhvr8a.pfb></opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/fonts/t
ype1/urw/palatino/uplb8a.pfb></opt/homebrew/Cellar/texlive/20220321/share/texmf
-dist/fonts/type1/urw/palatino/uplbi8a.pfb></opt/homebrew/Cellar/texlive/202203
21/share/texmf-dist/fonts/type1/urw/palatino/uplr8a.pfb></opt/homebrew/Cellar/t
exlive/20220321/share/texmf-dist/fonts/type1/urw/palatino/uplr8a.pfb></opt/home
brew/Cellar/texlive/20220321/share/texmf-dist/fonts/type1/urw/palatino/uplri8a.
pfb></opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/fonts/type1/public/
xypic/xyatip10.pfb></opt/homebrew/Cellar/texlive/20220321/share/texmf-dist/font
s/type1/public/xypic/xybtip10.pfb>
Output written on cp2122t.pdf (16 pages, 796796 bytes).
PDF statistics:
 450 PDF objects out of 1000 (max. 8388607)
 356 compressed objects within 4 object streams
 63 named destinations out of 1000 (max. 500000)
 80 words of extra memory for PDF output out of 10000 (max. 10000000)

